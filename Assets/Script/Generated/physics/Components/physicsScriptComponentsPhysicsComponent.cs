//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class physicsContext {

    public physicsEntity scriptComponentsPhysicsEntity { get { return GetGroup(physicsMatcher.ScriptComponentsPhysics).GetSingleEntity(); } }
    public Script.Components.PhysicsComponent scriptComponentsPhysics { get { return scriptComponentsPhysicsEntity.scriptComponentsPhysics; } }
    public bool hasScriptComponentsPhysics { get { return scriptComponentsPhysicsEntity != null; } }

    public physicsEntity SetScriptComponentsPhysics(System.Collections.Generic.List<Script.Pool.CollisionInfo> newCollisionInfos) {
        if (hasScriptComponentsPhysics) {
            throw new Entitas.EntitasException("Could not set ScriptComponentsPhysics!\n" + this + " already has an entity with Script.Components.PhysicsComponent!",
                "You should check if the context already has a scriptComponentsPhysicsEntity before setting it or use context.ReplaceScriptComponentsPhysics().");
        }
        var entity = CreateEntity();
        entity.AddScriptComponentsPhysics(newCollisionInfos);
        return entity;
    }

    public void ReplaceScriptComponentsPhysics(System.Collections.Generic.List<Script.Pool.CollisionInfo> newCollisionInfos) {
        var entity = scriptComponentsPhysicsEntity;
        if (entity == null) {
            entity = SetScriptComponentsPhysics(newCollisionInfos);
        } else {
            entity.ReplaceScriptComponentsPhysics(newCollisionInfos);
        }
    }

    public void RemoveScriptComponentsPhysics() {
        scriptComponentsPhysicsEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class physicsEntity {

    public Script.Components.PhysicsComponent scriptComponentsPhysics { get { return (Script.Components.PhysicsComponent)GetComponent(physicsComponentsLookup.ScriptComponentsPhysics); } }
    public bool hasScriptComponentsPhysics { get { return HasComponent(physicsComponentsLookup.ScriptComponentsPhysics); } }

    public void AddScriptComponentsPhysics(System.Collections.Generic.List<Script.Pool.CollisionInfo> newCollisionInfos) {
        var index = physicsComponentsLookup.ScriptComponentsPhysics;
        var component = (Script.Components.PhysicsComponent)CreateComponent(index, typeof(Script.Components.PhysicsComponent));
        component.CollisionInfos = newCollisionInfos;
        AddComponent(index, component);
    }

    public void ReplaceScriptComponentsPhysics(System.Collections.Generic.List<Script.Pool.CollisionInfo> newCollisionInfos) {
        var index = physicsComponentsLookup.ScriptComponentsPhysics;
        var component = (Script.Components.PhysicsComponent)CreateComponent(index, typeof(Script.Components.PhysicsComponent));
        component.CollisionInfos = newCollisionInfos;
        ReplaceComponent(index, component);
    }

    public void RemoveScriptComponentsPhysics() {
        RemoveComponent(physicsComponentsLookup.ScriptComponentsPhysics);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class physicsMatcher {

    static Entitas.IMatcher<physicsEntity> _matcherScriptComponentsPhysics;

    public static Entitas.IMatcher<physicsEntity> ScriptComponentsPhysics {
        get {
            if (_matcherScriptComponentsPhysics == null) {
                var matcher = (Entitas.Matcher<physicsEntity>)Entitas.Matcher<physicsEntity>.AllOf(physicsComponentsLookup.ScriptComponentsPhysics);
                matcher.componentNames = physicsComponentsLookup.componentNames;
                _matcherScriptComponentsPhysics = matcher;
            }

            return _matcherScriptComponentsPhysics;
        }
    }
}
